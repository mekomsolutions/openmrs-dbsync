########################################################################################################################
#                                                                                                                      #
# This file provides a configuration template for the DB sync sender application, it contains in-line documentation for#
# each property. For the spring core properties, please refer to the spring boot docs for more details.                #
#                                                                                                                      #
# NOTE: For the properties that have preset values, it's recommended not to change them unless you have to, some of    #
# them have placeholders of the form ${my.other.prop.key}, it means all you need to do is set values for the property  #
# key in this file named my.other.prop.key                                                                             #
#                                                                                                                      #
########################################################################################################################


# *********************** General EIP sender properties ****************************************************************
#
eip.home=${user.home}${file.separator}.openmrs-eip

# The unique identifier assigned to the OpenMRS instance associated to this application
# This should be obtained from the receiving instance
db-sync.senderId=

# Camel endpoints that need to be notified of DB events
db-event.destinations=direct:sender-db-sync 

# The interval in milliseconds before the first poll of the debezium event queue by the debezium reader route when the
# application starts.
debezium-event-reader.initial.delay=5000

# The interval in milliseconds between polls of the debezium event queue by the debezium reader route
debezium-event-reader.repeat.interval=5000

# The interval in milliseconds between polls of the retry queue by the retry route
db-event.retry.interval=1800000

# The interval in milliseconds before the first poll of the retry queue by the retry route when the application starts.
db-event.retry.initial.delay=120000
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Logging Configuration ************************************************************************
#
# Uncomment this to use console logging otherwise defaults to the logback.xml file located on the classpath which is
# configured to log to ${eip.home}/logs/openmrs-eip.log
#logging.config=classpath:logback-console.xml

# Logging level for the application loggers (all built-in routes and classes)
openmrs.eip.log.level=INFO

# Logging level for ONLY application class loggers, feel free to add more logger configurations
logging.level.org.openmrs.eip=${openmrs.eip.log.level}
logging.level.sender-db-sync=${openmrs.eip.log.level}
logging.level.sender-complex-obs-sync=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Tomcat Configuration *************************************************************************
#
# Server HTTP port
#server.port=
# ----------------------------------------------------------------------------------------------------------------------


# ****************************** Actuator Configuration ****************************************************************
#
#Whether to enable or disable all actuator endpoints by default.
management.endpoints.enabled-by-default=false
#management.endpoint.prometheus.enabled=true
#management.endpoint.health.enabled=true
#management.endpoint.health.show-details=always
#management.endpoints.web.exposure.include=health,prometheus
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the openMRS database to read from *******************************************
#
# The IP address or host name of the OpenMRS MySQL database
openmrs.db.host=

# The OpenMRS MySQL database port
openmrs.db.port=

# The OpenMRS MySQL database name
openmrs.db.name=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Datasource config ********************************************************************
#
# Driver class of the openMRS datasource
spring.openmrs-datasource.driverClassName=com.mysql.jdbc.Driver

# Url of the openMRS datasource, you don't have to change this value as long you've set the placeholder property values
spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}

# User name of the openMRS datasource
spring.openmrs-datasource.username=

# Password of the openMRS datasource
spring.openmrs-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the Management database *****************************************************
#
# Driver class of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.driverClassName=

# Dialect of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.dialect=

# Url of the management datasource
spring.mngt-datasource.jdbcUrl=

# User name of the management datasource
spring.mngt-datasource.username=

# Password of the management datasource
spring.mngt-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Debezium Config ******************************************************************************
#
# For details explanations of these properties, please refer to
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-connector-properties
#
# Maps to the connector property named database.server.id, see
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-property-database-server-id
# A numeric ID of this database client, which must be unique across all currently-running database processes in the MySQL cluster
# Choose a unique ID different from others processes, DO NOT change after setting it
debezium.db.serverId=

# Unique logical name of the MySQL database server, maps to the debezium MySQL connector property named
# database.server.name, DO NOT change after setting it
debezium.db.serverName=

# Database username for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.user, it's highly recommended to create separate user account as described at
# https://debezium.io/documentation/reference/connectors/mysql.html#setting-up-mysql
debezium.db.user=

# Database password for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.password
debezium.db.password=

# Specifies the criteria for running a snapshot when the connector starts, DO NOT change after setting it, maps to the
# debezium MySQL connector property named snapshot.mode
debezium.snapshotMode=schema_only

#Controls whether and how long the connector holds the global MySQL read lock, which prevents any updates to
# the database, while the connector is performing a snapshot
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-property-snapshot-locking-mode
debezium.snapshotLockingMode=extended

# Maximum size of each batch of source records to be read by debezium from the binlog files, maps to the
## debezium MySQL connector property named max.batch.size
#https://debezium.io/documentation/reference/1.6/connectors/mysql.html#mysql-property-max-batch-size
debezium.reader.maxBatchSize=2048

# The 2 properties below are debezium engine specific and are documented at
# https://debezium.io/documentation/reference/development/engine.html#engine-properties
#
# Path to file where offsets are to be stored, maps to property named offset.storage.file.filename, DO NOT change after
# setting it
debezium.offsetFilename=${eip.home}${file.separator}.debezium${file.separator}offsets.txt

# Path to file where offsets are to be stored, maps to property named database.history.file.filename, DO NOT change
# after setting it
debezium.historyFilename=${eip.home}${file.separator}.debezium${file.separator}dbhistory.txt
# ----------------------------------------------------------------------------------------------------------------------


# *********************** ActiveMQ configuration ***********************************************************************
#
# IP address or host name of the Artemis MQ broker shared with the receiver
spring.artemis.host=
#
# Artemis broker port
spring.artemis.port=
#
# User name of the Artemis broker
spring.artemis.user=
#
# Password of the Artemis broker
spring.artemis.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the ArtemisMQ endpoint to send out bound DB sync events *********************
#
# Use either one of the following confs. JMS endpoint if ArtemisMQ is configured or file endpoint, note that file
# endpoint is ONLY for TESTING purposes
# Camel JMS Endpoint e.g. activemq:topic:<topic-name> or FILE Endpoint e.g. file:<folderPath> Should be absolute path
camel.output.endpoint=activemq:topic:openmrs.sync.topic
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Complex obs sync configuration ***************************************************************
#
# Folder path where to locate complex obs data files to be synced, should be the OpenMRS complex obs data directory
openmrs.complex.obs.data.directory=

# The interval in milliseconds before the first poll of the complex obs directory file sync after the application
# starts, defaults to 15 seconds
#complex.obs.sync.initial.delay=

# The interval in milliseconds between polls of the the complex obs directory file sync, defaults to 15 minutes
#complex.obs.sync.delay=
# ----------------------------------------------------------------------------------------------------------------------

# *********************** PGP configuration if encryption is necessary (OPTIONAL) **************************************
#
# Enables data encryption of outgoing DB sync data, if true the receiver should be configured to decrypt messages
openmrs.eip.dbsync.encryption.enabled=false

# Path where the keys are located
pgp.sender.keysFolderPath=

# User name of the PGP sender key pair
pgp.sender.userId=

# Password of the PGP receiver key pair
pgp.sender.password=

# User name of the PGP receiver key pair
pgp.sender.receiverUserId=
# ----------------------------------------------------------------------------------------------------------------------

#Enabled Oauth when set to true
oauth.enabled=false

#The URL for fetching Oauth tokens from the identity provider
oauth.access.token.uri=

#The client Id of the account to use to authenticate with the identity provider
oauth.client.id=

#The client secret of the account to use to authenticate with the identity provider
oauth.client.secret=

#Authentication scope, can be multiple values separated by commas
oauth.client.scope=
